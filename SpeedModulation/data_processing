

r                 = RatCatcher; % RatCatcher object establishment

dataTable         = r.gather();
dataTable         = r.stitch(dataTable);
r.batchify();

tic;
figure(1)
histogram(dataTable.kmax, (0:20:2000));
xlabel('kmax (Bandwidth)');
ylabel('# of Specific kmax Observed');
figure(2);
histogram(dataTable.kcorr, (0:20:2000));

% for j = 1:height(dataTable) ---> do this to find method & root for every
%                                  index so that BandwidthEstimator properties are computed for each
%                                  recording for each cell
[method, root]    = r.extract(dataTable, 1, r.analysis, true);
b                 = BandwidthEstimator(root);

sorted_cellnums   = sort(dataTable.cellnums(:, 2)); % sorts cellnums in order for all cells to be in order
index             = zeros(height(dataTable, 1));

num_cells         = [1:1:max(sorted_cellnums)];

for ii = num_cells
    for i = 1:height(dataTable)
        if numcells(ii) == dataTable.cellnums(i, 2)
            index(i) = i; % makes index matrix with indices of each cell (in order of cell number)
        else
        end
    end
end

cells_matrix = cat(2, sorted_cellnums, index); % creates sorted cells with their corresponding dataTable indices


figure(3);
histogram(b.spikeTrain, 2000);


firing_rate = sum(b.spikeTimes); % check on this

% possible pre-processing of data (underneath code) ---> can use taper.m
%                                                        function instead
% for i = 1:length(dataTable.kmax)
    
